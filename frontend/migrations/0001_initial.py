# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-02-17 09:05
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('avatar', models.ImageField(blank=True, max_length=200, null=True, upload_to='avatar')),
                ('telefono', models.BigIntegerField(blank=True, db_column='Telefono', null=True, verbose_name='Numero de telefono')),
                ('genero', models.CharField(blank=True, db_column='Genero', max_length=1, null=True)),
                ('tatuaje', models.BooleanField(db_column='Tatuaje', default=False)),
                ('color_cabello', models.CharField(blank=True, db_column='Colorcabello', max_length=60, null=True, verbose_name='Color de cabello')),
                ('color_ojos', models.CharField(blank=True, db_column='Colorojo', max_length=60, null=True, verbose_name='Color de ojos')),
                ('fecha_nacimiento', models.DateField(blank=True, db_column='Fechanacimiento', null=True, verbose_name='Fecha de nacimiento')),
                ('nacionalidad', models.CharField(blank=True, db_column='Nacionalidad', max_length=60, null=True, verbose_name='Nacionalidad')),
                ('pais', models.CharField(db_column='Pais', max_length=60, verbose_name='Pais')),
                ('ciudad', models.CharField(blank=True, db_column='Ciudad', max_length=60, null=True, verbose_name='Ciudad')),
                ('etnia', models.CharField(blank=True, db_column='Etnia', max_length=40, null=True, verbose_name='Etnia')),
                ('pasaporte', models.CharField(blank=True, db_column='Pasaporte', max_length=60, null=True, verbose_name='Pasaporte')),
                ('visa', models.CharField(blank=True, db_column='Visa', max_length=60, null=True, verbose_name='Visa')),
                ('facebook', models.CharField(blank=True, db_column='Facebook', max_length=80, null=True, verbose_name='Facebook')),
                ('twitter', models.CharField(blank=True, db_column='Twitter', max_length=80, null=True, verbose_name='Twitter')),
                ('instagram', models.CharField(blank=True, db_column='Instagram', max_length=80, null=True, verbose_name='Instagram')),
                ('agencia', models.CharField(blank=True, db_column='Agencia', max_length=40, null=True, verbose_name='Agencia / Manager')),
                ('empresa_provedor', models.CharField(db_column='Empresaproveedor', db_index=True, max_length=80, null=True)),
                ('razon_social', models.CharField(blank=True, db_column='Razonsocial', max_length=80, null=True)),
                ('direccion', models.CharField(blank=True, db_column='Direccion', max_length=200, null=True, verbose_name='Direccion')),
                ('website', models.CharField(blank=True, db_column='Website', max_length=100, null=True, verbose_name='Sitio web')),
                ('tipo_usuario', models.CharField(choices=[('I', 'INDUSTRIA'), ('A', 'ARTISTAS'), ('F', 'FANS')], db_column='Tipousuario', default='A', max_length=1, verbose_name='Tipo de usuario')),
                ('uuid', models.CharField(default='7949268a-b6fe-4ac3-80ea-7df86b64e8fa', max_length=100, unique=True)),
                ('biografia', models.TextField(blank=True, db_column='Biografia', null=True, verbose_name='Biografia')),
                ('disponible_viajes', models.BooleanField(default=False, verbose_name='Disponibilidad de viaje')),
                ('idioma', models.CharField(blank=True, max_length=60, null=True, verbose_name='Idiomas')),
                ('usuario', models.CharField(blank=True, max_length=60, null=True, verbose_name='ID-Usuario')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuarios',
                'verbose_name': 'Usuario',
            },
        ),
        migrations.CreateModel(
            name='ContactCo',
            fields=[
                ('ids', models.AutoField(db_column='IDs', editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True, verbose_name='Nombre')),
                ('middlename', models.CharField(blank=True, db_column='Middlename', max_length=255, null=True, verbose_name='Segundo Nombre')),
                ('surname', models.CharField(blank=True, db_column='Surname', max_length=255, null=True, verbose_name='Apellido')),
                ('birthday', models.DateField(blank=True, db_column='Birthday', null=True, verbose_name='Fecha Cumplea√±os')),
                ('active', models.BooleanField(db_column='Active', default=True)),
                ('modifiedon', models.DateTimeField(auto_now=True, db_column='Modifiedon', null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True, db_column='Createdon', null=True)),
            ],
            options={
                'db_table': 'Contact_co',
                'verbose_name_plural': 'Contactos',
                'verbose_name': 'Contacto',
            },
        ),
        migrations.CreateModel(
            name='EventoCo',
            fields=[
                ('ids', models.AutoField(db_column='IDs', editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True, verbose_name='Nombre')),
                ('fechaInicio', models.DateTimeField(db_column='FechaInicio', null=True)),
                ('fechaFin', models.DateTimeField(db_column='FechaFin', null=True)),
                ('modifiedon', models.DateTimeField(auto_now=True, db_column='Modifiedon', null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True, db_column='Createdon', null=True)),
            ],
            options={
                'db_table': 'Evento_co',
                'verbose_name_plural': 'Eventos',
                'verbose_name': 'Evento',
            },
        ),
        migrations.CreateModel(
            name='GeneroArtistico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Genero Artistico')),
                ('createdOn', models.DateTimeField(auto_now_add=True, verbose_name='created On')),
                ('modifiedOn', models.DateTimeField(auto_now=True, verbose_name='modified On')),
            ],
            options={
                'db_table': 'GeneroArtistico_co',
                'verbose_name_plural': 'Generos',
                'verbose_name': 'Genero',
            },
        ),
        migrations.CreateModel(
            name='TipoArte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Tipo de Arte')),
                ('active', models.BooleanField(default=True)),
                ('createdOn', models.DateTimeField(auto_now_add=True, verbose_name='created On')),
                ('modifiedOn', models.DateTimeField(auto_now=True, verbose_name='modified On')),
            ],
            options={
                'db_table': 'TipoArte_co',
                'verbose_name_plural': 'Tipos de Arte',
                'verbose_name': 'Tipo de Arte',
            },
        ),
        migrations.CreateModel(
            name='UsuarioArte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_arte', models.ManyToManyField(db_column='Idtalento', to='frontend.TipoArte')),
                ('id_usuario', models.ManyToManyField(db_column='Idsuario', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'InteresUsuario',
                'verbose_name_plural': 'Intereses del usuario',
                'verbose_name': 'Interes del usuario',
            },
        ),
        migrations.AddField(
            model_name='generoartistico',
            name='id_tipo_arte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.TipoArte'),
        ),
    ]
